{"remainingRequest":"/home/runner/work/U2_Proyecto_Empresarial/U2_Proyecto_Empresarial/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/runner/work/U2_Proyecto_Empresarial/U2_Proyecto_Empresarial/node_modules/pug-plain-loader/index.js!/home/runner/work/U2_Proyecto_Empresarial/U2_Proyecto_Empresarial/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/U2_Proyecto_Empresarial/U2_Proyecto_Empresarial/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U2_Proyecto_Empresarial/U2_Proyecto_Empresarial/src/views/curso/Tema1.vue?vue&type=template&id=330d4d9e&lang=pug&","dependencies":[{"path":"/home/runner/work/U2_Proyecto_Empresarial/U2_Proyecto_Empresarial/src/views/curso/Tema1.vue","mtime":1746067611499},{"path":"/home/runner/work/U2_Proyecto_Empresarial/U2_Proyecto_Empresarial/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Proyecto_Empresarial/U2_Proyecto_Empresarial/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U2_Proyecto_Empresarial/U2_Proyecto_Empresarial/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U2_Proyecto_Empresarial/U2_Proyecto_Empresarial/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Proyecto_Empresarial/U2_Proyecto_Empresarial/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}